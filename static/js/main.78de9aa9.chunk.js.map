{"version":3,"sources":["Main/Components/Header/Header.js","Main/Components/WelcomePart/Welcome.js","Main/Components/AboutPart/About.js","Main/Components/SkillsPart/Skills.js","App.js","serviceWorker.js","index.js"],"names":["Header","btnChanges","e","props","btnClicked","currentTarget","id","customizeThemeBtnChanges","changeThemeFunc","Container","className","Row","Col","Navbar","Collapse","Nav","this","btnClassName","onClick","style","color","textClassName","Component","Welcome","state","summarySkills","showSummarySkills","arr","db","skills","filter","item","map","key","name","setState","componentDidMount","render","marginTop","firstName","lastName","NavLink","href","size","About","description","Skills","skillsCards","borderColorNew","cardTextNew","showSkillsCard","Card","borderBottomLeftRadius","borderBottomRightRadius","borderBottom","hover","zoom","src","alt","width","height","Body","Object","entries","i","componentDidUpdate","borderColor","App","useState","colors","snow","text","cardBorder","cardText","background","welcomePart","useRef","aboutPart","skillsPart","Snowflakes","wind","maxSize","getRandomColor","Math","floor","random","backgroundColor","current","scrollIntoView","behavior","block","bgColor","ref","window","innerHeight","type","infinite","scrollTo","top","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.78de9aa9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, Navbar, Nav } from 'react-bootstrap';\r\nimport { MDBBtn } from 'mdbreact';\r\n\r\nclass Header extends Component {\r\n\r\n    // arrow function for onClick on about and skills button\r\n    btnChanges = e => this.props.btnClicked(e.currentTarget.id);\r\n\r\n    // arrow function for onClick on customizeTheme button\r\n    customizeThemeBtnChanges = e => this.props.changeThemeFunc();\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className={`col-12`}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Navbar className=\"py-4 d-flex justify-content-around\">\r\n                                <Navbar.Collapse className=\"d-flex justify-content-start\">\r\n                                    <Nav>\r\n                                        <MDBBtn className={`${this.props.btnClassName}`} onClick={this.customizeThemeBtnChanges} style={{ color: this.props.textClassName }}>Customize Theme</MDBBtn>\r\n                                    </Nav>\r\n                                </Navbar.Collapse>\r\n                                <Navbar.Collapse className=\"d-flex justify-content-end\">\r\n                                    <Nav>\r\n                                        <MDBBtn id=\"about\" className={`${this.props.btnClassName}`} onClick={this.btnChanges} style={{ color: this.props.textClassName }}>About</MDBBtn>\r\n                                    </Nav>\r\n                                    <Nav>\r\n                                        <MDBBtn id=\"skills\" className={`${this.props.btnClassName}`} onClick={this.btnChanges} style={{ color: this.props.textClassName }}>Skills</MDBBtn>\r\n                                    </Nav>\r\n                                </Navbar.Collapse>\r\n                            </Navbar>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, NavLink } from 'react-bootstrap';\r\nimport { FaGithub, FaTwitter, FaStackOverflow, FaLinkedin, FaInstagram } from 'react-icons/fa';\r\nimport db from './../../Database/information.json';\r\n\r\nclass Welcome extends Component {\r\n\r\n    state = {\r\n        summarySkills: [],\r\n    };\r\n\r\n    // get skills from database\r\n    showSummarySkills = () => {\r\n\r\n        // only show six of first skills in the array. because this is summary\r\n        const arr = db.skills.filter(item => item.id < 6).map(item => <span key={item.id} className=\"px-1 font-italic\">{item.name} !</span>);\r\n\r\n        this.setState({ summarySkills: arr });\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        // show a summary of skills\r\n        this.showSummarySkills();\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Container style={{ marginTop: \"16%\", color: this.props.textClassName }}>\r\n                    <Row>\r\n                        <Col className=\"text-center\">\r\n                            <Row className=\"py-4\">\r\n                                <Col>\r\n                                    <h1>Hello, I`m {db.firstName} {db.lastName}</h1>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    {this.state.summarySkills}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"py-3\">\r\n                                <Col className=\"d-flex justify-content-center\">\r\n                                    <Row className=\"col-6\">\r\n                                        <Col className=\"p-0\">\r\n                                            <NavLink href=\"https://github.com/yasin6606\" className=\"w3-text-black\">\r\n                                                <FaGithub size=\"30\" />\r\n                                            </NavLink>\r\n                                        </Col>\r\n                                        <Col className=\"p-0\">\r\n                                            <NavLink href=\"https://www.twitter.com/kyanoosh1\" className=\"w3-text-blue\">\r\n                                                <FaTwitter size=\"30\" />\r\n                                            </NavLink>\r\n                                        </Col>\r\n                                        <Col className=\"p-0\">\r\n                                            <NavLink href=\"https://stackoverflow.com/users/13226548/kyanoosh-goorkani\" className=\"w3-text-orange\">\r\n                                                <FaStackOverflow size=\"30\" />\r\n                                            </NavLink>\r\n                                        </Col>\r\n                                        <Col className=\"p-0\">\r\n                                            <NavLink href=\"https://www.linkedin.com/in/yassin-gourkani-38255a1a9\" className=\"w3-text-light-blue\">\r\n                                                <FaLinkedin size=\"30\" />\r\n                                            </NavLink>\r\n                                        </Col>\r\n                                        <Col className=\"p-0\">\r\n                                            <NavLink href=\"https://www.instagram.com/yasin_gkn\" className=\"w3-text-red\">\r\n                                                <FaInstagram size=\"30\" />\r\n                                            </NavLink>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Welcome;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport db from './../../Database/information.json';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Container className=\"my-5 py-5\" style={{ color: this.props.textClassName }}>\r\n                    <Row>\r\n                        <Col className=\"my-5 py-3\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <h1>About Me : </h1>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p>{db.description}</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card } from 'react-bootstrap';\r\nimport { MDBView } from 'mdbreact';\r\nimport db from './../../Database/information.json';\r\nimport './../../../CSS/Font-Family.css';\r\nimport './../../../CSS/Pointer-Cursor.css';\r\n\r\nclass Skills extends Component {\r\n\r\n    state = {\r\n        skillsCards: [],\r\n        borderColorNew: \"#a525\",\r\n        cardTextNew: \"#1abb25\",\r\n    };\r\n\r\n    // get data of each card about skills from database\r\n    showSkillsCard = () => {\r\n        const arr = db.skills.map(item =>\r\n            <Col key={item.id} className=\"py-5\">\r\n                <Card className=\"w3-hover-shadow pointer-cursor h-100\">\r\n                    <Card.Header className=\"bg-white d-flex justify-content-center\" style={{ borderBottomLeftRadius: \"10px\", borderBottomRightRadius: \"10px\", borderBottom: `5px solid ${this.state.borderColorNew}` }}>\r\n                        <MDBView hover zoom >\r\n                            <img src={item[\"img-path\"]} alt={item.name} width=\"220\" height=\"220\" />\r\n                        </MDBView>\r\n                    </Card.Header>\r\n                    <Card.Body className={`${this.props.textClassName} bg-white`}>\r\n                        <Row>\r\n                            <Col>\r\n                                {\r\n                                    Object.entries(item)\r\n                                        .filter(i => i[0] !== \"id\" && i[0] !== \"img-path\")\r\n                                        .map(i =>\r\n                                            <Row key={i} className=\" font-comic\" style={{ color: this.state.cardTextNew }}>\r\n                                                <Col>\r\n                                                    <p className=\"font-weight-bold\">{i[0]} : </p>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <p className=\"font-italic\">{i[1]}</p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        )\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        );\r\n\r\n        this.setState({ skillsCards: arr });\r\n    };\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.borderColor !== this.state.borderColorNew) {\r\n            this.setState({\r\n                borderColorNew: this.props.borderColor,\r\n                cardTextNew: this.props.textClassName,\r\n            });\r\n            this.showSkillsCard();\r\n        };\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        // show skill's cards\r\n        this.showSkillsCard();\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Container className=\"py-5\">\r\n                    <Row>\r\n                        {this.state.skillsCards}\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Skills;","import React, { useRef, useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Header from './Main/Components/Header/Header';\r\nimport Welcome from './Main/Components/WelcomePart/Welcome';\r\nimport About from './Main/Components/AboutPart/About';\r\nimport Skills from './Main/Components/SkillsPart/Skills';\r\nimport Snowflakes from 'magic-snowflakes';\r\nimport { FaArrowCircleDown } from 'react-icons/fa';\r\nimport { MDBAnimation } from 'mdbreact';\r\n\r\nfunction App() {\r\n\r\n  const [state, setState] = useState({\r\n    colors: {\r\n      snow: \"#5aaa2b\",\r\n      text: \"#aa3\",\r\n      cardBorder: \"#5aaa2b\",\r\n      cardText: \"#aa2b\",\r\n      background: \"#fff\",\r\n    },\r\n  });\r\n\r\n  const welcomePart = useRef(null);\r\n  const aboutPart = useRef(null);\r\n  const skillsPart = useRef(null);\r\n\r\n  // snow animation\r\n  Snowflakes({ color: state.colors.snow, wind: false, maxSize: 4 });\r\n\r\n  const headerBtn = e => {\r\n    //scroll from About button in header to about part\r\n    e === \"about\" && aboutPart.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\n    //scroll from Skills button in header to skills part\r\n    e === \"skills\" && skillsPart.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n\r\n  const getRandomColor = () => {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    };\r\n    return color;\r\n  };\r\n\r\n  const changeTheme = () => {\r\n    const bgColor = getRandomColor();\r\n\r\n    if (getRandomColor() !== bgColor) {\r\n      setState({\r\n        colors: {\r\n          snow: getRandomColor(),\r\n          text: getRandomColor(),\r\n          cardBorder: getRandomColor(),\r\n          cardText: getRandomColor(),\r\n          background: bgColor,\r\n        },\r\n      });\r\n    } else {\r\n      const bgColor = getRandomColor();\r\n\r\n      setState({\r\n        colors: {\r\n          snow: getRandomColor(),\r\n          text: getRandomColor(),\r\n          cardBorder: getRandomColor(),\r\n          cardText: getRandomColor(),\r\n          background: bgColor,\r\n        },\r\n      });\r\n    };\r\n  };\r\n\r\n  // go arrow item\r\n  const goArrow = e => {\r\n    window.scrollTo({ behavior: \"smooth\", top: window.innerHeight });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"col-12\" style={{ backgroundColor: state.colors.background }}>\r\n        <Row>\r\n          <Col className=\"p-0\">\r\n            <Row className=\"fixed-top\">\r\n              <Col className=\"p-0\">\r\n                <Header\r\n                  btnClicked={headerBtn}\r\n                  btnClassName={`shadow-none`}\r\n                  textClassName={state.colors.text}\r\n                  changeThemeFunc={changeTheme}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row ref={welcomePart} style={{ height: window.innerHeight }}>\r\n              <Col className=\"col-12\">\r\n                <Welcome\r\n                  textClassName={state.colors.text}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row ref={aboutPart} style={{ height: window.innerHeight }}>\r\n              <Col className=\"col-12\">\r\n                <About\r\n                  textClassName={state.colors.text}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row ref={skillsPart}>\r\n              <Col className=\"col-12\">\r\n                <Skills\r\n                  textClassName={state.colors.cardText}\r\n                  borderColor={state.colors.cardBorder}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"fixed-bottom py-3\">\r\n              <Col className=\"text-center\">\r\n                <MDBAnimation type=\"jello\" infinite>\r\n                  <FaArrowCircleDown size=\"23\" color={state.colors.text} onClick={goArrow} />\r\n                </MDBAnimation>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'w3-css/w3.css';\r\nimport 'w3-css/4/w3pro.css';\r\nimport '../node_modules/vazir-font/dist/font-face.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}